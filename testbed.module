<?php

/**
 * @file
 * Testbed Module.
 */

/**
 * Implements hook_menu().
 */
function testbed_menu() {
  $items['testbed'] = array(
    'title' => 'Test',
    'page callback' => 'testbed_test',
    'access arguments' => array('administer site configuration'),
  );

  $items['form'] = array(
    'title' => 'Form',
    'page callback' => 'testbed_form',
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements hook_query_alter().
 */
function testbed_query_alter($query) {
  if ($query->hasTag('testbed') || variable_get('testbed_print_all_queries', 0) == 1) {
    dpm((string) $query);
  }
}

/**
 * Log a variable to watchdog.
 *
 * @param mixed $var
 *   The variable to log.
 * @param string $label
 *   (Optional) The label to use for the watchdog entry. Defaults to "Testbed".
 */
function testbed_log($var, $label = 'Testbed') {
  if (module_exists('devel')) {
    dfb($var);
  }

  watchdog($label, '<pre>!dump</pre>', array('!dump' => print_r($var, TRUE)));
}

/**
 * Implements hook_form_alter().
 */
function testbed_form_alter(&$form, &$form_state, $form_id) {
//  dpm($form);
//  dpm($form_state);
//  dpm($form_id);
}

/**
 * Load and debug a form.
 */
function testbed_form() {
  $args = func_get_args();

  if (count($args) < 1) {
    drupal_set_message(t('Please specify a form to load.'), 'error');
    return 'Fail';
  }

  $form_id = array_shift($args);

  // @todo Sanitize inputs!

  if (function_exists($form_id)) {
    $result = drupal_get_form($form_id);
    drupal_set_message(t('Form @form_id', ['@form_id' => $form_id]));

    if (is_array($result) || is_object($result)) {
      if (module_exists('devel')) {
        dpm($result);
      }
      else {
        drupal_set_message(sprinf('<pre>%s</pre>', print_r($result, TRUE)));
      }

      return 'Success';
    }

    if (is_string($result)) {
      return $result;
    }

    return sprintf('Result: %d', $result);
  }
  else {
    drupal_set_message(t("Undefined form @form_id", ['@form_id' => $form_id]), 'error');
    return 'Fail';
  }
}

/**
 * Callback function for Testbed.
 *
 * To use this function go to /test/<function_to_test>
 *
 * To pass arguments to the function you are testing, provide them as
 * additional path arguments.
 *
 * E.G. To test loading Node 123 with node_load, go to /test/node_load/123
 *
 * At present, only scalar arguments are supported (i.e. Strings and
 * Integers). Even then, strings with spaces are problematic, as the URL will
 * translate the spaces to the %20 placeholder. Be aware of this.
 */
function testbed_test() {
  $args = func_get_args();

  if (count($args) < 1) {
    drupal_set_message(t('Please specify a function to test.'), 'error');
    return 'Fail';
  }

  $function = array_shift($args);

  // @todo Sanitize inputs!

  if (function_exists($function)) {
    $before = microtime(TRUE);
    $result = call_user_func_array($function, $args);
    $after = microtime(TRUE);
    drupal_set_message(t('Ran Function @function', ['@function' => $function]));
    dpm($args, 'Arguments');
    dpm(sprintf('Execution Time: %f seconds', $after - $before));

    if (is_array($result) || is_object($result)) {
      if (module_exists('devel')) {
        dpm($result, 'Result');
      }
      else {
        drupal_set_message(sprinf('<pre>%s</pre>', print_r($result, TRUE)));
      }

      return 'Success';
    }

    if (is_string($result)) {
      return $result;
    }

    return sprintf('Result: %d', $result);
  }
  else {
    drupal_set_message(t("Undefined function @function", ['@function' => $function]), 'error');
    return 'Fail';
  }

}

/**
 * Sample Testbed Function.
 *
 * To run this function go to /test/testbed_sample.
 */
function testbed_sample() {
  return func_get_args();
}
